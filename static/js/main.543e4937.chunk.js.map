{"version":3,"sources":["starRating.js","Color.js","ColorList.js","hooks.js","AddColorForm.js","App.js","reportWebVitals.js","index.js"],"names":["Star","selected","onSelect","f","console","log","color","onClick","StarRating","length","totalStars","selectedStars","onRate","Array","map","n","i","Color","id","title","rating","onRemove","style","height","background","ColorList","colors","onRemoveColor","onRateColor","className","useInput","initialValue","useState","value","setValue","onChange","e","target","AddColorForm","onNewColor","titleProps","resetTitle","colorProps","resetColor","onSubmit","preventDefault","type","placeholder","required","App","colorData","setColors","newColors","v4","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.543e4937.chunk.js","sourcesContent":["import React from \"react\";\nimport { FaStar } from \"react-icons/fa\";\n\n// individual star component\nconst Star = ({selected = false, onSelect = f => console.log(\"kkk\") }) => (\n\t<FaStar color={selected ? \"red\" : \"grey\"} onClick={onSelect}/>\n);\n\n/*\nexport default function StarRating() {\n\treturn [\n\t\t<FaStar color=\"red\" />,\n\t\t<FaStar color=\"red\" />,\n\t\t<FaStar color=\"red\" />,\n\t\t<FaStar color=\"grey\" />,\n\t\t<FaStar color=\"grey\" />\n\t\t\t\n\t];\n}\n*/\n\nconst createArray = length => [...Array(length)];\n\nexport default function StarRating({ totalStars = 5, selectedStars = 0, onRate = f => f }) {\n\treturn (\n\t\t<>\n\t\t\t{createArray(totalStars).map(\n\t\t\t\t(n, i) => (\n\t\t\t\t\t<Star \n\t\t\t\t\tkey = {i}\n\t\t\t\t\tselected = {selectedStars > i}\n\t\t\t\t\tonSelect = {()=>onRate(i+1)}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t)}\n\t\t\t<p>\n\t\t\t{selectedStars} of {totalStars} stars\n\t\t\t</p>\n\t\t</>\n\n\t);\n}","import React from \"react\";\nimport StarRating from \"./starRating\"\nimport { FaTrash } from \"react-icons/fa\";\n\nexport default function Color({ id, title, color, rating, onRemove = f => f, onRate = f => f }) {\n\treturn (\n\t\t<section>\n\t\t\t<h1>{title}</h1>\n\t\t\t<button onClick={()=> onRemove(id)}>\n\t\t\t\t<FaTrash />\n\t\t\t</button>\n\t\t\t<div style={{ height:50, background: color }} />\n\t\t\t{<StarRating selectedStars={ rating } onRate={rating => onRate(id, rating)}/>}\n\t\t</section>\n\t);\n}","import React from \"react\";\nimport Color from \"./Color\";\n\nexport default function ColorList({ colors = [], onRemoveColor = f => f, onRateColor = f => f }) \n{\n\n\tif (!colors.length) return <div>NO colors Listed. (Add a color) </div>;\n\treturn (\n\t\t<div className=\"color-list\">\n\t\t\t{\n\t\t\t\tcolors.map(color => (\n\t\t\t\t\t<Color \n\t\t\t\t\t\tkey={color.id} \n\t\t\t\t\t\t{...color} \n\t\t\t\t\t\tonRemove={onRemoveColor} \n\t\t\t\t\t\tonRate={onRateColor} \n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t\t)\n\t\t\t}\n\t\t</div>\n\t);\n}","import { useState } from \"react\";\n\n\nexport const useInput = initialValue => {\n\tconst [value, setValue] = useState(initialValue);\n\treturn [\n\t\t{ value, onChange: e => setValue(e.target.value) },\n\t\t() => setValue(initialValue)\n\t];\n};","import React, { useState } from \"react\";\nimport { useInput } from \"./hooks\";\n\n\nexport default function AddColorForm({ onNewColor = f => f }){\n\tconst [titleProps, resetTitle] = useInput(\"\");\n\tconst [colorProps, resetColor] = useInput(\"#000000\");\n\t//const txtTitle = useRef();\n\t//const hexColor = useRef();\n\tconst submit = e => {\n\t\te.preventDefault();\n\t\tonNewColor(titleProps.value, colorProps.value);\n\t\tresetTitle();\n\t\tresetColor();\n\t\t//const title = txtTitle.current.value;\n\t\t//const color = hexColor.current.value;\n\t\t//onNewColor(title, color);\n\t\t//console.log(title, color)\n\t\t//setTitle(\"\")\n\t\t//setColor(\"#000000\")\n\t\t//txtTitle.current.value = \"\";\n\t\t//hexColor.current.value=\"\";\n\t\t\n\t}\n\treturn (\n\t\t<form onSubmit={submit}>\n\t\t\t<input \n\t\t\t//value={title} \n\t\t\t{...titleProps}\n\t\t\ttype=\"text\" \n\t\t\tplaceholder=\"color title...\" \n\t\t\t//onChange={event => setTitle(event.target.value)}\n\t\t\trequired />\n\t\t\t<input \n\t\t\t//value={color} \n\t\t\t{...colorProps}\n\t\t\ttype=\"color\" \n\t\t\t//onChange={event => setColor(event.target.value)}\n\t\t\trequired />\n\t\t\t<button>Add</button>\n\t\t</form>\n\t);\n\n}","\nimport React, { useState } from \"react\";\nimport colorData from \"./color-data.json\";\nimport './App.css';\nimport ColorList from \"./ColorList.js\";\nimport AddColorForm from \"./AddColorForm\";\nimport { v4 } from \"uuid\";\n\nfunction App() {\n  console.log(colorData);\n  const [colors, setColors] = useState(colorData);\n  console.log(\"Colors\");\n  console.log(colors);\n  return (\n  <>\n    <AddColorForm \n      onNewColor={\n        (title, color) => {\n          const newColors = [\n            ...colors, \n            {\n              id: v4(),\n              rating: 0,\n              title,\n              color\n            }\n          ];\n          setColors(newColors);\n        }\n      }\n    />\n\n    <ColorList \n      colors={colors}\n      onRateColor = {\n        (id, rating) => {\n          const newColors = colors.map(color =>\n            color.id === id ? {...color, rating} : color\n          );\n          console.log(\"nnnn\");\n          console.log(newColors);\n          setColors(newColors)\n          console.log(\"yy\")\n          console.log(newColors);\n          console.log(\"JJ\")\n        }\n      }\n      onRemoveColor = { id => {\n        const newColors = colors.filter(color => color.id !== id);\n        setColors(newColors);\n      }} \n    />\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}